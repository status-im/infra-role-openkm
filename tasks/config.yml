---
- name: Create OpenKM app directories
  file:
    path:  '{{ item.path }}'
    owner: '{{ item.get("owner", openkm_app_cont_user) }}'
    group: '{{ item.get("group", "docker") }}'
    mode:  '{{ item.get("mode",  "0750") }}'
    state: 'directory'
  with_items:
    - { path: '{{ openkm_service_path }}' }
    - { path: '{{ openkm_app_cont_vol }}' }
    - { path: '{{ openkm_app_cont_vol }}/conf' }
    - { path: '{{ openkm_app_cont_vol }}/logs' }
    - { path: '{{ openkm_app_cont_vol }}/repo' }
    - { path: '{{ openkm_app_cont_vol }}/webapps' }
    - { path: '{{ openkm_app_cont_vol }}/plugins' }
    - { path: '{{ openkm_xvfb_cont_vol }}', group: '{{ openkm_xvfb_cont_uid }}', mode: '1777' }

- name: Create a symbolic link to /docker
  file:
    src: /data
    dest: /docker
    state: link

- name: Create installation ID file
  no_log: true
  when: openkm_installation_id is defined
  register: openkm_installation_id_file
  copy:
    content: '{{ openkm_installation_id }}'
    dest:  '{{ openkm_app_cont_vol }}/repo/.system.key'
    owner: '{{ openkm_app_cont_user }}'
    group: 'docker'
    mode:  '0640'

- name: Template OpenKM config files
  no_log: true
  register: openkm_config
  template:
    src:   '{{ item }}'
    dest:  '{{ openkm_app_cont_vol }}/conf/{{ item | basename }}'
    owner: '{{ openkm_app_cont_user }}'
    group: 'docker'
    mode:  '0640'
  with_fileglob:
    - 'templates/config/*'
